user www-data;
worker_processes auto;
pid /run/nginx.pid;
# include /etc/nginx/modules-enabled/*.conf;

events {
	worker_connections 768;
	# multi_accept on;
}

http {

	##
	# Basic Settings
	##

	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;
	# server_tokens off;

	# server_names_hash_bucket_size 64;
	# server_name_in_redirect off;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	##
	# SSL Settings
	##

	ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
	ssl_prefer_server_ciphers on;

	##
	# Logging Settings
	##

	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;

	##
	# Gzip Settings
	##

	gzip on;

	# gzip_vary on;
	# gzip_proxied any;
	# gzip_comp_level 6;
	# gzip_buffers 16 8k;
	# gzip_http_version 1.1;
	# gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

	##
	# Virtual Host Configs
	##
	#
	log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                  '$status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for" "$proxy_add_x_forwarded_for"';

	
	server {
		# 需要被监听的端口号，前提是此端口号没有被占用，否则在重启 Nginx 时会报错
   	    listen       8080;
	    # 服务名称，无所谓
	    server_name portal;

	    # 上述端口指向的根目录
	    root /usr/share/nginx/html/;
	    # 项目根目录中指向项目首页
	    index index.html;

	    client_max_body_size 20m; 
	    client_body_buffer_size 128k;
		# 根请求会指向的页面
		location / {
	    	# 此处的 @router 实际上是引用下面的转发，否则在 Vue 路由刷新时可能会抛出 404
	    	try_files $uri $uri/ @router;
	    	# 请求指向的首页
	    	index index.html;  
    	}

    	# 由于路由的资源不一定是真实的路径，无法找到具体文件
    	# 所以需要将请求重写到 index.html 中
		location @router {
	    	rewrite ^.*$ /index.html last;
		}

	    location /graphql {
        	# 后端的真实接口
        	proxy_pass http://172.17.0.1:8008/graphql/;
        	proxy_redirect default;
			proxy_set_header Origin 'http://172.17.0.1:8080';
        	proxy_set_header Host $host;
        	proxy_set_header X-Real-IP $remote_addr;
        	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        	proxy_set_header   Cookie $http_cookie;
			proxy_http_version 1.1;
        	proxy_set_header HTTP-X-REQUESTED-WITH $http_x_requested_with;
        	proxy_set_header HTTP_X_REQUESTED_WITH $http_x_requested_with;
        	proxy_set_header x-requested-with $http_x_requested_with;
	    	fastcgi_param X-Forwarded-For $proxy_add_x_forwarded_for;
        	client_max_body_size 10m;
        	client_body_buffer_size 128k;
        	proxy_connect_timeout 90;
        	proxy_send_timeout 90;
        	proxy_read_timeout 90;
        	proxy_buffer_size 128k;
        	proxy_buffers 32 32k;
        	proxy_busy_buffers_size 128k;
        	proxy_temp_file_write_size 128k;
    	}

		location ^~/socket.io {
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "upgrade";
			proxy_http_version 1.1;
		    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header Host $host;
			proxy_pass http://172.17.0.1:8008;
			proxy_redirect off;
		}
	}
}